name: Build Windows Executable

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger
  release:
    types: [ published ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pandas numpy xlsxwriter streamlit openpyxl
    
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed `
          --add-data "analysis.py;." `
          --hidden-import=streamlit `
          --hidden-import=pandas `
          --hidden-import=numpy `
          --hidden-import=xlsxwriter `
          --hidden-import=streamlit.web.cli `
          --hidden-import=streamlit.runtime.scriptrunner.magic_funcs `
          --hidden-import=streamlit.components.v1 `
          --hidden-import=openpyxl `
          --name "Procesador_de_Archivos" `
          launcher.py
    
    - name: Verify build
      run: |
        echo "Build completed. Checking output:"
        dir dist
        if (Test-Path "dist/Procesador_de_Archivos.exe") {
          echo "‚úÖ Executable created successfully"
          $size = (Get-Item "dist/Procesador_de_Archivos.exe").length / 1MB
          echo "üì¶ File size: $([math]::Round($size, 2)) MB"
        } else {
          echo "‚ùå Build failed - executable not found"
          exit 1
        }
    
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/Procesador_de_Archivos.exe
        retention-days: 30
    
    # Upload to release if triggered by release
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: dist/Procesador_de_Archivos.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}